Git
버전관리 시스템의 종류

✔ 버전관리
여러 파일을 하나의 버전으로 묶어 관리하는 것

버전관리 시스템의 종류
1. 클라이언트 - 서버 모델
    - 하나의 중앙 서버로 여러 클라이언트들이 각자 필요한 것만 가져와서 작업을 하고 다시 중앙 서버로 보내서 통합하는 방식
    - svn, cvs

2. 분산 모델
    - 하나의 중앙 서버가 존재하지만 여러 클라이언트들은 각자의 컴퓨터 저장소에 전체 사본을 가지고 작업하는 방식
    - Git


Git의 장점
1. 동시에 작업하는 사람들과 소스코드를 주고받을 필요가 없음
2. 같은 파일을 여러명이 동시에 병렬 개발이 가능
3. 변동 과정을 체계적으로 관리할 수 있고, 언제든지 지난 시점의 버전으로 되돌릴 수 있음
4. 인터넷이 연결되지 않은 곳에서도 개발을 진행할 수 있고, 중앙 서버의 데이터가 유실되어도 다시 복구할 수 있음

Git 설치
1. 구글에서 'git 설치' 검색
2. 왼쪽 메뉴에서 downloads를 클릭 (https://git-scm.com/downloads)
3. 모니터에 있는 다운로드 클릭
4. Standalone Installer -> 64-bit Git for Windows Setup. 클릭 후 다운로드 및 설치(기본 설정)

설치 확인
git - git bash
    git --version 검색해서 나오면 잘 설치된 것

Git 명령어
1. 프로젝트 디렉토리 내에 "로컬 저장소"를 생성
- 원하는 프로젝트 위치로 이동 후 "git init" 실행
    cd C:/Moderate/KDT3/Git/project/
    git init


2. git 버전 관리할 파일을 선택(stage에 올림)
    git add index.html

3. 하나의 버전 만들기
- 로컬 시스템에서 파일을 수정/생성/삭제한 원격 저장소에 반영할 파일들을 선별하는 것(버전 만들기)
- 파일이 변경될 때 변경 사항은 자동으로 저장되지 않음
- git에게 새 커밋을 생성하여 변경 사항을 저장하도록 지시
    git commit -m "index.html 커밋"

✔ 만약 아래와 같이 에러가 발생한 경우
*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'gwanhee@DESKTOP-VPVHD1F.(none)')

아래 명령어를 입력하여 해결함

    git config --global user.email "이메일 주소"
    git config --global user.name "이름"

✔ 확인
    git config user.email
    git config user.name

✔ 이메일 또는 이름을 잘 못 입력한 경우 등록과 동일하게 진행
    git config --global user.email "변경할 이메일 주소"
    git config --global user.name "변경할 이름"

4. 로그 확인하기
    git log

5. README.md 만들기
- 깃허브에 업로드시 저장소 메인 설명글로 사용
- 마크다운으로 작성
    제목
        #       제목 <h1></h1>
        ##      제목 <h2></h2>
        ~
        ######  제목 <h6></h6>

    강조
        볼드체: **볼드체**
        이탤릭체: *이탤릭체* 또는 _이탤릭체_
        이탤릭체와 볼드체를 동시: **_이탤릭체_**
        취소선: ~~취소선~~
        밑줄: <ul>밑줄</ul>
    
    목록
        순서가 있는 목록
            1. 김사과
            2. 반하나

        순서가 없는 목록
            - 김사과
            - 반하나
            또는
            * 김사과
            * 반하나
    링크
        [클릴할 문자열](URL)
        예) [구글로 이동](https://www.google.com)
    
    코드 작성
        ```
            프로그램 코드 작성
            ...
        ```

6. 여러 파일을 함께 선택하기
- state에 현재 디렉토리에 있는 변화된 모든 파일을 선택
    git add .

7. 선택된 여러 파일을 커밋
    git commit -m "현재 디렉토리에 있는 모든 변경된 파일을 처음 커밋"
    